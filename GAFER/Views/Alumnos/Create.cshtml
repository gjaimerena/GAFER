@model GAFER.Alumnos



@*<div class="modal-body" style="width:600px !important; margin:30px auto !important; background-color:#e6e7e8; padding-left: 60px;">*@
    @*<div class="alert alert-warning">
        
    </div>*@

<div class="row box box-primary">


    <div class="box-header with-border">
        <h3 class="box-title">Nuevo Alumno</h3>
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal box-body ">

            @Html.ValidationSummary(true)
            <div class="form-group">
                @Html.LabelFor(model => model.IdColegio, "IdColegio", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("IdColegio", String.Empty)
                    @Html.ValidationMessageFor(model => model.IdColegio)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CodigoAlumno, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CodigoAlumno)
                    @Html.ValidationMessageFor(model => model.CodigoAlumno)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Apellido)
                    @Html.ValidationMessageFor(model => model.Apellido)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nombre)
                    @Html.ValidationMessageFor(model => model.Nombre)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Mail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Mail)
                    @Html.ValidationMessageFor(model => model.Mail)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Observaciones, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Observaciones)
                    @Html.ValidationMessageFor(model => model.Observaciones)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Condicion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Condicion)
                    @Html.ValidationMessageFor(model => model.Condicion)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Telefono)
                    @Html.ValidationMessageFor(model => model.Telefono)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FechaAlta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FechaAlta)
                    @Html.ValidationMessageFor(model => model.FechaAlta)
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Importe 1er Vencimiento", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Importe1)
                    @Html.ValidationMessageFor(model => model.Importe1)
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Importe 2do Vencimiento", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Importe2)
                    @Html.ValidationMessageFor(model => model.Importe2)
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Importe 3er Vencimiento", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Importe3)
                    @Html.ValidationMessageFor(model => model.Importe3)
                </div>
            </div>

        </div>
        <div class="box-footer">
            <div class="form-group">
            <div class="col-md-4 col-md-offset-4">
                @*<button type="button" class="btn btn-default"
                            data-dismiss="modal">
                        Cancel
                    </button>*@
                <button type="submit" id="approve-btn" class="btn btn-danger">Save</button>
            </div>
            </div>
         </div>
      



    }
</div>

    @*</div>
        <script type="text/javascript">
            $(function () {
                $('#approve-btn').click(function () {
                    $('#modal-container').modal('hide');
                });
            });
        </script>*@
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
    @*<script>
        $(document).ready(function() {
            $('#loginForm').formValidation({
                framework: 'bootstrap',
                excluded: ':disabled',
                icon: {
                    valid: 'glyphicon glyphicon-ok',
                    invalid: 'glyphicon glyphicon-remove',
                    validating: 'glyphicon glyphicon-refresh'
                },
                fields: {
                    username: {
                        validators: {
                            notEmpty: {
                                message: 'The username is required'
                            }
                        }
                    },
                    password: {
                        validators: {
                            notEmpty: {
                                message: 'The password is required'
                            }
                        }
                    }
                }
            });
        });
        </script>*@
